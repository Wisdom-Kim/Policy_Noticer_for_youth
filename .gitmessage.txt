################
# 사용방법
# -m 입력 없이 git commit을 입력합니다.
# 해당 템플릿이 뜨면 INSERT로 입력모드 전환이 가능하며
# ESC로 입력 모드 해제가 가능합니다.
# commit을 완료하고 싶은 경우, 입력모드 해제 후 :wq를 입력해주시면 됩니다.

################
# <타입> : <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지
# 예: FEAT: 로그인 기능 추가

# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)

################
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)

################
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
# 예: Close #7

################
#자주 사용하는 태그 종류

#Feat : 새로운 기능을 추가하는 경우
#Fix : 버그를 고친경우
#Docs : 문서를 수정한 경우
#Style : 코드 포맷 변경, 세미콜론 누락, 코드 수정이 없는경우
#Refactor : 코드 리펙토링
#Test : 테스트 코드. 리펙토링 테스트 코드를 추가했을 때
#Chore : 빌드 업무 수정, 패키지 매니저 수정
#Design : CSS 등 사용자가 UI 디자인을 변경했을 때
#Rename : 파일명(or 폴더명) 을 수정한 경우
#Remove : 코드(파일) 의 삭제가 있을 때. "Clean", "Eliminate" 를 사용하기도 함